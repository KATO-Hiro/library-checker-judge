name: Problems-Deploy

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      parallel:
        default: 30
        type: number

concurrency:
  group: ${{ inputs.env }}-problems-deploy
  cancel-in-progress: true

jobs:
  gen-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
     - id: matrix
       run: python3 -c "print('matrix={}'.format(list(map(str, range(0, ${{ inputs.parallel }})))))"
      

  problems-deploy:
    needs: gen-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:      
      fail-fast: false
      matrix:
        index: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/checkout@v3
      with:
        repository: yosupo06/library-checker-problems
        path: library-checker-problems

    - id: gen-protoc
      name: Generate protoc
      run: ./api/gen_protoc.sh

    - id: pip-setup
      run: pip3 install -r ./library-checker-problems/requirements.txt

    - id: auth
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: projects/190778459730/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
        service_account: cloud-run-deployer@library-checker-project.iam.gserviceaccount.com
        token_format: access_token
    
    - uses: docker/login-action@v1
      with:
        registry: asia-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    # TODO: migrate to google-github-actions/deploy-cloudrun@v0
    - id: setup-cloud-sdk
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        install_components: beta

    - id: secrets
      uses: google-github-actions/get-secretmanager-secrets@v1
      with:
        secrets: |-
          api-host:library-checker-project/${{ inputs.env }}-api-host/latest
          api-judge-pass:library-checker-project/${{ inputs.env }}-api-judge-pass/latest
          minio-host:library-checker-project/minio-host/latest
          minio-id:library-checker-project/minio-id/latest
          minio-secret:library-checker-project/minio-secret/latest
          minio-bucket:library-checker-project/minio-bucket/latest

    - id: build-uploader
      name: Build Uploader
      working-directory: ./uploader
      run: go build .

    - id: deploy-problems
      name: Deploy Problems
      working-directory: ./uploader
      run: >
        python3 upload.py
      env:
        CLOUD_RUN_TASK_INDEX: '${{ matrix.index }}'
        CLOUD_RUN_TASK_COUNT: '${{ inputs.parallel }}'
        API_HOST: '${{ steps.secrets.outputs.api-host }}'
        API_PASS: '${{ steps.secrets.outputs.api-judge-pass }}'
        MINIO_HOST: '${{ steps.secrets.outputs.minio-host }}'
        MINIO_ID: '${{ steps.secrets.outputs.minio-id }}'
        MINIO_SECRET: '${{ steps.secrets.outputs.minio-secret }}'
        MINIO_BUCKET: '${{ steps.secrets.outputs.minio-bucket }}'
