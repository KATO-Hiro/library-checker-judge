// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: proto/library_checker.proto

package librarychecker

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         // "newuser"
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // "password"
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // JWT Token
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         // "admin"
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // "password"
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // JWT Token
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsAdmin bool   `protobuf:"varint,2,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type UserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserInfoRequest) Reset() {
	*x = UserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRequest) ProtoMessage() {}

func (x *UserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRequest.ProtoReflect.Descriptor instead.
func (*UserInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{5}
}

type UserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	IsAdmin bool  `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	User    *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserInfoResponse) Reset() {
	*x = UserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResponse) ProtoMessage() {}

func (x *UserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResponse.ProtoReflect.Descriptor instead.
func (*UserInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Do not use.
func (x *UserInfoResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *UserInfoResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserListRequest) Reset() {
	*x = UserListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListRequest) ProtoMessage() {}

func (x *UserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListRequest.ProtoReflect.Descriptor instead.
func (*UserListRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{7}
}

type UserListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserListResponse) Reset() {
	*x = UserListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResponse) ProtoMessage() {}

func (x *UserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResponse.ProtoReflect.Descriptor instead.
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{8}
}

func (x *UserListResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type ChangeUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChangeUserInfoRequest) Reset() {
	*x = ChangeUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserInfoRequest) ProtoMessage() {}

func (x *ChangeUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserInfoRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{9}
}

func (x *ChangeUserInfoRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ChangeUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeUserInfoResponse) Reset() {
	*x = ChangeUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserInfoResponse) ProtoMessage() {}

func (x *ChangeUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserInfoResponse.ProtoReflect.Descriptor instead.
func (*ChangeUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{10}
}

type Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // "aplusb"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"` // "A + B"
}

func (x *Problem) Reset() {
	*x = Problem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{11}
}

func (x *Problem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Problem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ProblemListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProblemListRequest) Reset() {
	*x = ProblemListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemListRequest) ProtoMessage() {}

func (x *ProblemListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemListRequest.ProtoReflect.Descriptor instead.
func (*ProblemListRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{12}
}

type ProblemListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problems []*Problem `protobuf:"bytes,1,rep,name=problems,proto3" json:"problems,omitempty"`
}

func (x *ProblemListResponse) Reset() {
	*x = ProblemListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemListResponse) ProtoMessage() {}

func (x *ProblemListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemListResponse.ProtoReflect.Descriptor instead.
func (*ProblemListResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{13}
}

func (x *ProblemListResponse) GetProblems() []*Problem {
	if x != nil {
		return x.Problems
	}
	return nil
}

type ProblemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // "aplusb"
}

func (x *ProblemInfoRequest) Reset() {
	*x = ProblemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemInfoRequest) ProtoMessage() {}

func (x *ProblemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemInfoRequest.ProtoReflect.Descriptor instead.
func (*ProblemInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{14}
}

func (x *ProblemInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProblemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"` // "A + B"
	Statement   string  `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
	TimeLimit   float64 `protobuf:"fixed64,3,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`     // 2.0 = 2 seconds
	CaseVersion string  `protobuf:"bytes,4,opt,name=case_version,json=caseVersion,proto3" json:"case_version,omitempty"` // hash of testcases
}

func (x *ProblemInfoResponse) Reset() {
	*x = ProblemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemInfoResponse) ProtoMessage() {}

func (x *ProblemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemInfoResponse.ProtoReflect.Descriptor instead.
func (*ProblemInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{15}
}

func (x *ProblemInfoResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProblemInfoResponse) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

func (x *ProblemInfoResponse) GetTimeLimit() float64 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *ProblemInfoResponse) GetCaseVersion() string {
	if x != nil {
		return x.CaseVersion
	}
	return ""
}

type ChangeProblemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // "aplusb"
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Statement   string  `protobuf:"bytes,3,opt,name=statement,proto3" json:"statement,omitempty"`
	TimeLimit   float64 `protobuf:"fixed64,4,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	CaseVersion string  `protobuf:"bytes,5,opt,name=case_version,json=caseVersion,proto3" json:"case_version,omitempty"`
}

func (x *ChangeProblemInfoRequest) Reset() {
	*x = ChangeProblemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeProblemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeProblemInfoRequest) ProtoMessage() {}

func (x *ChangeProblemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeProblemInfoRequest.ProtoReflect.Descriptor instead.
func (*ChangeProblemInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{16}
}

func (x *ChangeProblemInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChangeProblemInfoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChangeProblemInfoRequest) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

func (x *ChangeProblemInfoRequest) GetTimeLimit() float64 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *ChangeProblemInfoRequest) GetCaseVersion() string {
	if x != nil {
		return x.CaseVersion
	}
	return ""
}

type ChangeProblemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeProblemInfoResponse) Reset() {
	*x = ChangeProblemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeProblemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeProblemInfoResponse) ProtoMessage() {}

func (x *ChangeProblemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeProblemInfoResponse.ProtoReflect.Descriptor instead.
func (*ChangeProblemInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{17}
}

type SubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem string `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"` // "aplusb"
	Source  string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`   // "int main() ..."
	Lang    string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`       // "cpp"
}

func (x *SubmitRequest) Reset() {
	*x = SubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRequest) ProtoMessage() {}

func (x *SubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRequest.ProtoReflect.Descriptor instead.
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{18}
}

func (x *SubmitRequest) GetProblem() string {
	if x != nil {
		return x.Problem
	}
	return ""
}

func (x *SubmitRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SubmitRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type SubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // submission id
}

func (x *SubmitResponse) Reset() {
	*x = SubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResponse) ProtoMessage() {}

func (x *SubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResponse.ProtoReflect.Descriptor instead.
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{19}
}

func (x *SubmitResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubmissionOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        // submission id
	ProblemName  string  `protobuf:"bytes,2,opt,name=problem_name,json=problemName,proto3" json:"problem_name,omitempty"`    // "aplusb"
	ProblemTitle string  `protobuf:"bytes,3,opt,name=problem_title,json=problemTitle,proto3" json:"problem_title,omitempty"` // "A + B"
	UserName     string  `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`             // "admin"
	Lang         string  `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`                                     // "cpp"
	IsLatest     bool    `protobuf:"varint,6,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	Status       string  `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"` // "AC"
	Hacked       bool    `protobuf:"varint,10,opt,name=hacked,proto3" json:"hacked,omitempty"`
	Time         float64 `protobuf:"fixed64,8,opt,name=time,proto3" json:"time,omitempty"`    // 2.0 = 2 seconds
	Memory       int64   `protobuf:"varint,9,opt,name=memory,proto3" json:"memory,omitempty"` // x bytes
}

func (x *SubmissionOverview) Reset() {
	*x = SubmissionOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionOverview) ProtoMessage() {}

func (x *SubmissionOverview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionOverview.ProtoReflect.Descriptor instead.
func (*SubmissionOverview) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{20}
}

func (x *SubmissionOverview) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubmissionOverview) GetProblemName() string {
	if x != nil {
		return x.ProblemName
	}
	return ""
}

func (x *SubmissionOverview) GetProblemTitle() string {
	if x != nil {
		return x.ProblemTitle
	}
	return ""
}

func (x *SubmissionOverview) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SubmissionOverview) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *SubmissionOverview) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *SubmissionOverview) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SubmissionOverview) GetHacked() bool {
	if x != nil {
		return x.Hacked
	}
	return false
}

func (x *SubmissionOverview) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SubmissionOverview) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type SubmissionCaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Case   string  `protobuf:"bytes,1,opt,name=case,proto3" json:"case,omitempty"`      // "example_00.in"
	Status string  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`  // "AC"
	Time   float64 `protobuf:"fixed64,3,opt,name=time,proto3" json:"time,omitempty"`    // 2.0( = 2 seconds)
	Memory int64   `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"` // x bytes
}

func (x *SubmissionCaseResult) Reset() {
	*x = SubmissionCaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionCaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionCaseResult) ProtoMessage() {}

func (x *SubmissionCaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionCaseResult.ProtoReflect.Descriptor instead.
func (*SubmissionCaseResult) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{21}
}

func (x *SubmissionCaseResult) GetCase() string {
	if x != nil {
		return x.Case
	}
	return ""
}

func (x *SubmissionCaseResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SubmissionCaseResult) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SubmissionCaseResult) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type SubmissionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // submission id
}

func (x *SubmissionInfoRequest) Reset() {
	*x = SubmissionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionInfoRequest) ProtoMessage() {}

func (x *SubmissionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionInfoRequest.ProtoReflect.Descriptor instead.
func (*SubmissionInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{22}
}

func (x *SubmissionInfoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubmissionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overview     *SubmissionOverview     `protobuf:"bytes,1,opt,name=overview,proto3" json:"overview,omitempty"`
	CaseResults  []*SubmissionCaseResult `protobuf:"bytes,2,rep,name=case_results,json=caseResults,proto3" json:"case_results,omitempty"`
	Source       string                  `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"` // "source"
	CompileError []byte                  `protobuf:"bytes,5,opt,name=compile_error,json=compileError,proto3" json:"compile_error,omitempty"`
	CanRejudge   bool                    `protobuf:"varint,4,opt,name=can_rejudge,json=canRejudge,proto3" json:"can_rejudge,omitempty"`
}

func (x *SubmissionInfoResponse) Reset() {
	*x = SubmissionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionInfoResponse) ProtoMessage() {}

func (x *SubmissionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionInfoResponse.ProtoReflect.Descriptor instead.
func (*SubmissionInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{23}
}

func (x *SubmissionInfoResponse) GetOverview() *SubmissionOverview {
	if x != nil {
		return x.Overview
	}
	return nil
}

func (x *SubmissionInfoResponse) GetCaseResults() []*SubmissionCaseResult {
	if x != nil {
		return x.CaseResults
	}
	return nil
}

func (x *SubmissionInfoResponse) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SubmissionInfoResponse) GetCompileError() []byte {
	if x != nil {
		return x.CompileError
	}
	return nil
}

func (x *SubmissionInfoResponse) GetCanRejudge() bool {
	if x != nil {
		return x.CanRejudge
	}
	return false
}

type SubmissionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip    uint32 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`      // fetch [skip, skip + limit)-th submissions
	Limit   uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`    // # of submissions (max 1000)
	Problem string `protobuf:"bytes,3,opt,name=problem,proto3" json:"problem,omitempty"` // "aplusb"(filter)
	Status  string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`   // "AC"(filter)
	Hacked  bool   `protobuf:"varint,7,opt,name=hacked,proto3" json:"hacked,omitempty"`  // (filter)
	User    string `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`       // "admin"(filter)
	Lang    string `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`       // "cpp"(filter)
	Order   string `protobuf:"bytes,6,opt,name=order,proto3" json:"order,omitempty"`     // sort order (default: "-id", "time")
}

func (x *SubmissionListRequest) Reset() {
	*x = SubmissionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionListRequest) ProtoMessage() {}

func (x *SubmissionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionListRequest.ProtoReflect.Descriptor instead.
func (*SubmissionListRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{24}
}

func (x *SubmissionListRequest) GetSkip() uint32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *SubmissionListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SubmissionListRequest) GetProblem() string {
	if x != nil {
		return x.Problem
	}
	return ""
}

func (x *SubmissionListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SubmissionListRequest) GetHacked() bool {
	if x != nil {
		return x.Hacked
	}
	return false
}

func (x *SubmissionListRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SubmissionListRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *SubmissionListRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type SubmissionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submissions []*SubmissionOverview `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	Count       int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // # of submissions(skip/limit don't effect this)
}

func (x *SubmissionListResponse) Reset() {
	*x = SubmissionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionListResponse) ProtoMessage() {}

func (x *SubmissionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionListResponse.ProtoReflect.Descriptor instead.
func (*SubmissionListResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{25}
}

func (x *SubmissionListResponse) GetSubmissions() []*SubmissionOverview {
	if x != nil {
		return x.Submissions
	}
	return nil
}

func (x *SubmissionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RejudgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // submission id
}

func (x *RejudgeRequest) Reset() {
	*x = RejudgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejudgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejudgeRequest) ProtoMessage() {}

func (x *RejudgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejudgeRequest.ProtoReflect.Descriptor instead.
func (*RejudgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{26}
}

func (x *RejudgeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RejudgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RejudgeResponse) Reset() {
	*x = RejudgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejudgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejudgeResponse) ProtoMessage() {}

func (x *RejudgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejudgeResponse.ProtoReflect.Descriptor instead.
func (*RejudgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{27}
}

type Lang struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // "cpp"
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // "C++(default, C++17)"
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"` // "ubuntu18.04 apt"
}

func (x *Lang) Reset() {
	*x = Lang{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lang) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lang) ProtoMessage() {}

func (x *Lang) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lang.ProtoReflect.Descriptor instead.
func (*Lang) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{28}
}

func (x *Lang) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lang) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lang) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type LangListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LangListRequest) Reset() {
	*x = LangListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LangListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LangListRequest) ProtoMessage() {}

func (x *LangListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LangListRequest.ProtoReflect.Descriptor instead.
func (*LangListRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{29}
}

type LangListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Langs []*Lang `protobuf:"bytes,1,rep,name=langs,proto3" json:"langs,omitempty"`
}

func (x *LangListResponse) Reset() {
	*x = LangListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LangListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LangListResponse) ProtoMessage() {}

func (x *LangListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LangListResponse.ProtoReflect.Descriptor instead.
func (*LangListResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{30}
}

func (x *LangListResponse) GetLangs() []*Lang {
	if x != nil {
		return x.Langs
	}
	return nil
}

type UserStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`    // "admin"
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // 12 (AC)
}

func (x *UserStatistics) Reset() {
	*x = UserStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatistics) ProtoMessage() {}

func (x *UserStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatistics.ProtoReflect.Descriptor instead.
func (*UserStatistics) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{31}
}

func (x *UserStatistics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserStatistics) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RankingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RankingRequest) Reset() {
	*x = RankingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankingRequest) ProtoMessage() {}

func (x *RankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankingRequest.ProtoReflect.Descriptor instead.
func (*RankingRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{32}
}

type RankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statistics []*UserStatistics `protobuf:"bytes,1,rep,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *RankingResponse) Reset() {
	*x = RankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankingResponse) ProtoMessage() {}

func (x *RankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankingResponse.ProtoReflect.Descriptor instead.
func (*RankingResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{33}
}

func (x *RankingResponse) GetStatistics() []*UserStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type PopJudgeTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeName    string             `protobuf:"bytes,1,opt,name=judge_name,json=judgeName,proto3" json:"judge_name,omitempty"`
	ExpectedTime *duration.Duration `protobuf:"bytes,2,opt,name=expected_time,json=expectedTime,proto3" json:"expected_time,omitempty"`
}

func (x *PopJudgeTaskRequest) Reset() {
	*x = PopJudgeTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopJudgeTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopJudgeTaskRequest) ProtoMessage() {}

func (x *PopJudgeTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopJudgeTaskRequest.ProtoReflect.Descriptor instead.
func (*PopJudgeTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{34}
}

func (x *PopJudgeTaskRequest) GetJudgeName() string {
	if x != nil {
		return x.JudgeName
	}
	return ""
}

func (x *PopJudgeTaskRequest) GetExpectedTime() *duration.Duration {
	if x != nil {
		return x.ExpectedTime
	}
	return nil
}

type PopJudgeTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId int32 `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"` // submission id
}

func (x *PopJudgeTaskResponse) Reset() {
	*x = PopJudgeTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopJudgeTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopJudgeTaskResponse) ProtoMessage() {}

func (x *PopJudgeTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopJudgeTaskResponse.ProtoReflect.Descriptor instead.
func (*PopJudgeTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{35}
}

func (x *PopJudgeTaskResponse) GetSubmissionId() int32 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

type SyncJudgeTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeName    string                  `protobuf:"bytes,1,opt,name=judge_name,json=judgeName,proto3" json:"judge_name,omitempty"`
	SubmissionId int32                   `protobuf:"varint,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Status       string                  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Time         float64                 `protobuf:"fixed64,4,opt,name=time,proto3" json:"time,omitempty"`    // 2.0 = 2 seconds
	Memory       int64                   `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"` // x bytes
	CompileError []byte                  `protobuf:"bytes,8,opt,name=compile_error,json=compileError,proto3" json:"compile_error,omitempty"`
	CaseResults  []*SubmissionCaseResult `protobuf:"bytes,6,rep,name=case_results,json=caseResults,proto3" json:"case_results,omitempty"`
	ExpectedTime *duration.Duration      `protobuf:"bytes,7,opt,name=expected_time,json=expectedTime,proto3" json:"expected_time,omitempty"`
}

func (x *SyncJudgeTaskStatusRequest) Reset() {
	*x = SyncJudgeTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncJudgeTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncJudgeTaskStatusRequest) ProtoMessage() {}

func (x *SyncJudgeTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncJudgeTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*SyncJudgeTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{36}
}

func (x *SyncJudgeTaskStatusRequest) GetJudgeName() string {
	if x != nil {
		return x.JudgeName
	}
	return ""
}

func (x *SyncJudgeTaskStatusRequest) GetSubmissionId() int32 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

func (x *SyncJudgeTaskStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SyncJudgeTaskStatusRequest) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SyncJudgeTaskStatusRequest) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *SyncJudgeTaskStatusRequest) GetCompileError() []byte {
	if x != nil {
		return x.CompileError
	}
	return nil
}

func (x *SyncJudgeTaskStatusRequest) GetCaseResults() []*SubmissionCaseResult {
	if x != nil {
		return x.CaseResults
	}
	return nil
}

func (x *SyncJudgeTaskStatusRequest) GetExpectedTime() *duration.Duration {
	if x != nil {
		return x.ExpectedTime
	}
	return nil
}

type SyncJudgeTaskStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncJudgeTaskStatusResponse) Reset() {
	*x = SyncJudgeTaskStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncJudgeTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncJudgeTaskStatusResponse) ProtoMessage() {}

func (x *SyncJudgeTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncJudgeTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*SyncJudgeTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{37}
}

type FinishJudgeTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeName    string `protobuf:"bytes,1,opt,name=judge_name,json=judgeName,proto3" json:"judge_name,omitempty"`
	SubmissionId int32  `protobuf:"varint,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	// Deprecated: Do not use.
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// Deprecated: Do not use.
	Time float64 `protobuf:"fixed64,4,opt,name=time,proto3" json:"time,omitempty"` // 2.0 = 2 seconds
	// Deprecated: Do not use.
	Memory      int64  `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"` // x bytes
	CaseVersion string `protobuf:"bytes,6,opt,name=case_version,json=caseVersion,proto3" json:"case_version,omitempty"`
}

func (x *FinishJudgeTaskRequest) Reset() {
	*x = FinishJudgeTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishJudgeTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishJudgeTaskRequest) ProtoMessage() {}

func (x *FinishJudgeTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishJudgeTaskRequest.ProtoReflect.Descriptor instead.
func (*FinishJudgeTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{38}
}

func (x *FinishJudgeTaskRequest) GetJudgeName() string {
	if x != nil {
		return x.JudgeName
	}
	return ""
}

func (x *FinishJudgeTaskRequest) GetSubmissionId() int32 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

// Deprecated: Do not use.
func (x *FinishJudgeTaskRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Deprecated: Do not use.
func (x *FinishJudgeTaskRequest) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// Deprecated: Do not use.
func (x *FinishJudgeTaskRequest) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *FinishJudgeTaskRequest) GetCaseVersion() string {
	if x != nil {
		return x.CaseVersion
	}
	return ""
}

type FinishJudgeTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinishJudgeTaskResponse) Reset() {
	*x = FinishJudgeTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_library_checker_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishJudgeTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishJudgeTaskResponse) ProtoMessage() {}

func (x *FinishJudgeTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_library_checker_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishJudgeTaskResponse.ProtoReflect.Descriptor instead.
func (*FinishJudgeTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_library_checker_proto_rawDescGZIP(), []int{39}
}

var File_proto_library_checker_proto protoreflect.FileDescriptor

var file_proto_library_checker_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a,
	0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3e, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x35, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x28,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x41, 0x0a, 0x15, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x18,
	0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x14, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x22,
	0x28, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x61, 0x73, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1b,
	0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x0d, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x22, 0x20, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x6e, 0x0a,
	0x14, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x27, 0x0a,
	0x15, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x47, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x63,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x72,
	0x65, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x68, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x74, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f,
	0x52, 0x65, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x44, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x10, 0x4c, 0x61, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x6c, 0x61, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x52, 0x05, 0x6c, 0x61, 0x6e, 0x67, 0x73, 0x22, 0x3a, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x74, 0x0a, 0x13, 0x50, 0x6f, 0x70,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3e, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x3b, 0x0a, 0x14, 0x50, 0x6f, 0x70, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd2, 0x02, 0x0a,
	0x1a, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xcf, 0x01, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4a, 0x75, 0x64, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x88, 0x0c,
	0x0a, 0x15, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12,
	0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x07, 0x52, 0x65, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x12, 0x1e, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x07, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0c, 0x50, 0x6f, 0x70, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x23, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x70, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x70, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4a, 0x75, 0x64, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_library_checker_proto_rawDescOnce sync.Once
	file_proto_library_checker_proto_rawDescData = file_proto_library_checker_proto_rawDesc
)

func file_proto_library_checker_proto_rawDescGZIP() []byte {
	file_proto_library_checker_proto_rawDescOnce.Do(func() {
		file_proto_library_checker_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_library_checker_proto_rawDescData)
	})
	return file_proto_library_checker_proto_rawDescData
}

var file_proto_library_checker_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_proto_library_checker_proto_goTypes = []interface{}{
	(*RegisterRequest)(nil),             // 0: librarychecker.RegisterRequest
	(*RegisterResponse)(nil),            // 1: librarychecker.RegisterResponse
	(*LoginRequest)(nil),                // 2: librarychecker.LoginRequest
	(*LoginResponse)(nil),               // 3: librarychecker.LoginResponse
	(*User)(nil),                        // 4: librarychecker.User
	(*UserInfoRequest)(nil),             // 5: librarychecker.UserInfoRequest
	(*UserInfoResponse)(nil),            // 6: librarychecker.UserInfoResponse
	(*UserListRequest)(nil),             // 7: librarychecker.UserListRequest
	(*UserListResponse)(nil),            // 8: librarychecker.UserListResponse
	(*ChangeUserInfoRequest)(nil),       // 9: librarychecker.ChangeUserInfoRequest
	(*ChangeUserInfoResponse)(nil),      // 10: librarychecker.ChangeUserInfoResponse
	(*Problem)(nil),                     // 11: librarychecker.Problem
	(*ProblemListRequest)(nil),          // 12: librarychecker.ProblemListRequest
	(*ProblemListResponse)(nil),         // 13: librarychecker.ProblemListResponse
	(*ProblemInfoRequest)(nil),          // 14: librarychecker.ProblemInfoRequest
	(*ProblemInfoResponse)(nil),         // 15: librarychecker.ProblemInfoResponse
	(*ChangeProblemInfoRequest)(nil),    // 16: librarychecker.ChangeProblemInfoRequest
	(*ChangeProblemInfoResponse)(nil),   // 17: librarychecker.ChangeProblemInfoResponse
	(*SubmitRequest)(nil),               // 18: librarychecker.SubmitRequest
	(*SubmitResponse)(nil),              // 19: librarychecker.SubmitResponse
	(*SubmissionOverview)(nil),          // 20: librarychecker.SubmissionOverview
	(*SubmissionCaseResult)(nil),        // 21: librarychecker.SubmissionCaseResult
	(*SubmissionInfoRequest)(nil),       // 22: librarychecker.SubmissionInfoRequest
	(*SubmissionInfoResponse)(nil),      // 23: librarychecker.SubmissionInfoResponse
	(*SubmissionListRequest)(nil),       // 24: librarychecker.SubmissionListRequest
	(*SubmissionListResponse)(nil),      // 25: librarychecker.SubmissionListResponse
	(*RejudgeRequest)(nil),              // 26: librarychecker.RejudgeRequest
	(*RejudgeResponse)(nil),             // 27: librarychecker.RejudgeResponse
	(*Lang)(nil),                        // 28: librarychecker.Lang
	(*LangListRequest)(nil),             // 29: librarychecker.LangListRequest
	(*LangListResponse)(nil),            // 30: librarychecker.LangListResponse
	(*UserStatistics)(nil),              // 31: librarychecker.UserStatistics
	(*RankingRequest)(nil),              // 32: librarychecker.RankingRequest
	(*RankingResponse)(nil),             // 33: librarychecker.RankingResponse
	(*PopJudgeTaskRequest)(nil),         // 34: librarychecker.PopJudgeTaskRequest
	(*PopJudgeTaskResponse)(nil),        // 35: librarychecker.PopJudgeTaskResponse
	(*SyncJudgeTaskStatusRequest)(nil),  // 36: librarychecker.SyncJudgeTaskStatusRequest
	(*SyncJudgeTaskStatusResponse)(nil), // 37: librarychecker.SyncJudgeTaskStatusResponse
	(*FinishJudgeTaskRequest)(nil),      // 38: librarychecker.FinishJudgeTaskRequest
	(*FinishJudgeTaskResponse)(nil),     // 39: librarychecker.FinishJudgeTaskResponse
	(*duration.Duration)(nil),           // 40: google.protobuf.Duration
}
var file_proto_library_checker_proto_depIdxs = []int32{
	4,  // 0: librarychecker.UserInfoResponse.user:type_name -> librarychecker.User
	4,  // 1: librarychecker.UserListResponse.users:type_name -> librarychecker.User
	4,  // 2: librarychecker.ChangeUserInfoRequest.user:type_name -> librarychecker.User
	11, // 3: librarychecker.ProblemListResponse.problems:type_name -> librarychecker.Problem
	20, // 4: librarychecker.SubmissionInfoResponse.overview:type_name -> librarychecker.SubmissionOverview
	21, // 5: librarychecker.SubmissionInfoResponse.case_results:type_name -> librarychecker.SubmissionCaseResult
	20, // 6: librarychecker.SubmissionListResponse.submissions:type_name -> librarychecker.SubmissionOverview
	28, // 7: librarychecker.LangListResponse.langs:type_name -> librarychecker.Lang
	31, // 8: librarychecker.RankingResponse.statistics:type_name -> librarychecker.UserStatistics
	40, // 9: librarychecker.PopJudgeTaskRequest.expected_time:type_name -> google.protobuf.Duration
	21, // 10: librarychecker.SyncJudgeTaskStatusRequest.case_results:type_name -> librarychecker.SubmissionCaseResult
	40, // 11: librarychecker.SyncJudgeTaskStatusRequest.expected_time:type_name -> google.protobuf.Duration
	0,  // 12: librarychecker.LibraryCheckerService.Register:input_type -> librarychecker.RegisterRequest
	2,  // 13: librarychecker.LibraryCheckerService.Login:input_type -> librarychecker.LoginRequest
	5,  // 14: librarychecker.LibraryCheckerService.UserInfo:input_type -> librarychecker.UserInfoRequest
	7,  // 15: librarychecker.LibraryCheckerService.UserList:input_type -> librarychecker.UserListRequest
	9,  // 16: librarychecker.LibraryCheckerService.ChangeUserInfo:input_type -> librarychecker.ChangeUserInfoRequest
	14, // 17: librarychecker.LibraryCheckerService.ProblemInfo:input_type -> librarychecker.ProblemInfoRequest
	12, // 18: librarychecker.LibraryCheckerService.ProblemList:input_type -> librarychecker.ProblemListRequest
	16, // 19: librarychecker.LibraryCheckerService.ChangeProblemInfo:input_type -> librarychecker.ChangeProblemInfoRequest
	18, // 20: librarychecker.LibraryCheckerService.Submit:input_type -> librarychecker.SubmitRequest
	22, // 21: librarychecker.LibraryCheckerService.SubmissionInfo:input_type -> librarychecker.SubmissionInfoRequest
	24, // 22: librarychecker.LibraryCheckerService.SubmissionList:input_type -> librarychecker.SubmissionListRequest
	26, // 23: librarychecker.LibraryCheckerService.Rejudge:input_type -> librarychecker.RejudgeRequest
	29, // 24: librarychecker.LibraryCheckerService.LangList:input_type -> librarychecker.LangListRequest
	32, // 25: librarychecker.LibraryCheckerService.Ranking:input_type -> librarychecker.RankingRequest
	34, // 26: librarychecker.LibraryCheckerService.PopJudgeTask:input_type -> librarychecker.PopJudgeTaskRequest
	36, // 27: librarychecker.LibraryCheckerService.SyncJudgeTaskStatus:input_type -> librarychecker.SyncJudgeTaskStatusRequest
	38, // 28: librarychecker.LibraryCheckerService.FinishJudgeTask:input_type -> librarychecker.FinishJudgeTaskRequest
	1,  // 29: librarychecker.LibraryCheckerService.Register:output_type -> librarychecker.RegisterResponse
	3,  // 30: librarychecker.LibraryCheckerService.Login:output_type -> librarychecker.LoginResponse
	6,  // 31: librarychecker.LibraryCheckerService.UserInfo:output_type -> librarychecker.UserInfoResponse
	8,  // 32: librarychecker.LibraryCheckerService.UserList:output_type -> librarychecker.UserListResponse
	10, // 33: librarychecker.LibraryCheckerService.ChangeUserInfo:output_type -> librarychecker.ChangeUserInfoResponse
	15, // 34: librarychecker.LibraryCheckerService.ProblemInfo:output_type -> librarychecker.ProblemInfoResponse
	13, // 35: librarychecker.LibraryCheckerService.ProblemList:output_type -> librarychecker.ProblemListResponse
	17, // 36: librarychecker.LibraryCheckerService.ChangeProblemInfo:output_type -> librarychecker.ChangeProblemInfoResponse
	19, // 37: librarychecker.LibraryCheckerService.Submit:output_type -> librarychecker.SubmitResponse
	23, // 38: librarychecker.LibraryCheckerService.SubmissionInfo:output_type -> librarychecker.SubmissionInfoResponse
	25, // 39: librarychecker.LibraryCheckerService.SubmissionList:output_type -> librarychecker.SubmissionListResponse
	27, // 40: librarychecker.LibraryCheckerService.Rejudge:output_type -> librarychecker.RejudgeResponse
	30, // 41: librarychecker.LibraryCheckerService.LangList:output_type -> librarychecker.LangListResponse
	33, // 42: librarychecker.LibraryCheckerService.Ranking:output_type -> librarychecker.RankingResponse
	35, // 43: librarychecker.LibraryCheckerService.PopJudgeTask:output_type -> librarychecker.PopJudgeTaskResponse
	37, // 44: librarychecker.LibraryCheckerService.SyncJudgeTaskStatus:output_type -> librarychecker.SyncJudgeTaskStatusResponse
	39, // 45: librarychecker.LibraryCheckerService.FinishJudgeTask:output_type -> librarychecker.FinishJudgeTaskResponse
	29, // [29:46] is the sub-list for method output_type
	12, // [12:29] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_library_checker_proto_init() }
func file_proto_library_checker_proto_init() {
	if File_proto_library_checker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_library_checker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Problem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeProblemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeProblemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionCaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejudgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejudgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lang); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LangListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LangListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopJudgeTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopJudgeTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncJudgeTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncJudgeTaskStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishJudgeTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_library_checker_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishJudgeTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_library_checker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_library_checker_proto_goTypes,
		DependencyIndexes: file_proto_library_checker_proto_depIdxs,
		MessageInfos:      file_proto_library_checker_proto_msgTypes,
	}.Build()
	File_proto_library_checker_proto = out.File
	file_proto_library_checker_proto_rawDesc = nil
	file_proto_library_checker_proto_goTypes = nil
	file_proto_library_checker_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LibraryCheckerServiceClient is the client API for LibraryCheckerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LibraryCheckerServiceClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
	UserList(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListResponse, error)
	ChangeUserInfo(ctx context.Context, in *ChangeUserInfoRequest, opts ...grpc.CallOption) (*ChangeUserInfoResponse, error)
	ProblemInfo(ctx context.Context, in *ProblemInfoRequest, opts ...grpc.CallOption) (*ProblemInfoResponse, error)
	ProblemList(ctx context.Context, in *ProblemListRequest, opts ...grpc.CallOption) (*ProblemListResponse, error)
	ChangeProblemInfo(ctx context.Context, in *ChangeProblemInfoRequest, opts ...grpc.CallOption) (*ChangeProblemInfoResponse, error)
	Submit(ctx context.Context, in *SubmitRequest, opts ...grpc.CallOption) (*SubmitResponse, error)
	SubmissionInfo(ctx context.Context, in *SubmissionInfoRequest, opts ...grpc.CallOption) (*SubmissionInfoResponse, error)
	SubmissionList(ctx context.Context, in *SubmissionListRequest, opts ...grpc.CallOption) (*SubmissionListResponse, error)
	Rejudge(ctx context.Context, in *RejudgeRequest, opts ...grpc.CallOption) (*RejudgeResponse, error)
	LangList(ctx context.Context, in *LangListRequest, opts ...grpc.CallOption) (*LangListResponse, error)
	Ranking(ctx context.Context, in *RankingRequest, opts ...grpc.CallOption) (*RankingResponse, error)
	// --- Judge ---
	PopJudgeTask(ctx context.Context, in *PopJudgeTaskRequest, opts ...grpc.CallOption) (*PopJudgeTaskResponse, error)
	SyncJudgeTaskStatus(ctx context.Context, in *SyncJudgeTaskStatusRequest, opts ...grpc.CallOption) (*SyncJudgeTaskStatusResponse, error)
	FinishJudgeTask(ctx context.Context, in *FinishJudgeTaskRequest, opts ...grpc.CallOption) (*FinishJudgeTaskResponse, error)
}

type libraryCheckerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLibraryCheckerServiceClient(cc grpc.ClientConnInterface) LibraryCheckerServiceClient {
	return &libraryCheckerServiceClient{cc}
}

func (c *libraryCheckerServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	out := new(UserInfoResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/UserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) UserList(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListResponse, error) {
	out := new(UserListResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/UserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) ChangeUserInfo(ctx context.Context, in *ChangeUserInfoRequest, opts ...grpc.CallOption) (*ChangeUserInfoResponse, error) {
	out := new(ChangeUserInfoResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/ChangeUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) ProblemInfo(ctx context.Context, in *ProblemInfoRequest, opts ...grpc.CallOption) (*ProblemInfoResponse, error) {
	out := new(ProblemInfoResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/ProblemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) ProblemList(ctx context.Context, in *ProblemListRequest, opts ...grpc.CallOption) (*ProblemListResponse, error) {
	out := new(ProblemListResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/ProblemList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) ChangeProblemInfo(ctx context.Context, in *ChangeProblemInfoRequest, opts ...grpc.CallOption) (*ChangeProblemInfoResponse, error) {
	out := new(ChangeProblemInfoResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/ChangeProblemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) Submit(ctx context.Context, in *SubmitRequest, opts ...grpc.CallOption) (*SubmitResponse, error) {
	out := new(SubmitResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/Submit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) SubmissionInfo(ctx context.Context, in *SubmissionInfoRequest, opts ...grpc.CallOption) (*SubmissionInfoResponse, error) {
	out := new(SubmissionInfoResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/SubmissionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) SubmissionList(ctx context.Context, in *SubmissionListRequest, opts ...grpc.CallOption) (*SubmissionListResponse, error) {
	out := new(SubmissionListResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/SubmissionList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) Rejudge(ctx context.Context, in *RejudgeRequest, opts ...grpc.CallOption) (*RejudgeResponse, error) {
	out := new(RejudgeResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/Rejudge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) LangList(ctx context.Context, in *LangListRequest, opts ...grpc.CallOption) (*LangListResponse, error) {
	out := new(LangListResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/LangList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) Ranking(ctx context.Context, in *RankingRequest, opts ...grpc.CallOption) (*RankingResponse, error) {
	out := new(RankingResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/Ranking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) PopJudgeTask(ctx context.Context, in *PopJudgeTaskRequest, opts ...grpc.CallOption) (*PopJudgeTaskResponse, error) {
	out := new(PopJudgeTaskResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/PopJudgeTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) SyncJudgeTaskStatus(ctx context.Context, in *SyncJudgeTaskStatusRequest, opts ...grpc.CallOption) (*SyncJudgeTaskStatusResponse, error) {
	out := new(SyncJudgeTaskStatusResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/SyncJudgeTaskStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) FinishJudgeTask(ctx context.Context, in *FinishJudgeTaskRequest, opts ...grpc.CallOption) (*FinishJudgeTaskResponse, error) {
	out := new(FinishJudgeTaskResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/FinishJudgeTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LibraryCheckerServiceServer is the server API for LibraryCheckerService service.
type LibraryCheckerServiceServer interface {
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	UserInfo(context.Context, *UserInfoRequest) (*UserInfoResponse, error)
	UserList(context.Context, *UserListRequest) (*UserListResponse, error)
	ChangeUserInfo(context.Context, *ChangeUserInfoRequest) (*ChangeUserInfoResponse, error)
	ProblemInfo(context.Context, *ProblemInfoRequest) (*ProblemInfoResponse, error)
	ProblemList(context.Context, *ProblemListRequest) (*ProblemListResponse, error)
	ChangeProblemInfo(context.Context, *ChangeProblemInfoRequest) (*ChangeProblemInfoResponse, error)
	Submit(context.Context, *SubmitRequest) (*SubmitResponse, error)
	SubmissionInfo(context.Context, *SubmissionInfoRequest) (*SubmissionInfoResponse, error)
	SubmissionList(context.Context, *SubmissionListRequest) (*SubmissionListResponse, error)
	Rejudge(context.Context, *RejudgeRequest) (*RejudgeResponse, error)
	LangList(context.Context, *LangListRequest) (*LangListResponse, error)
	Ranking(context.Context, *RankingRequest) (*RankingResponse, error)
	// --- Judge ---
	PopJudgeTask(context.Context, *PopJudgeTaskRequest) (*PopJudgeTaskResponse, error)
	SyncJudgeTaskStatus(context.Context, *SyncJudgeTaskStatusRequest) (*SyncJudgeTaskStatusResponse, error)
	FinishJudgeTask(context.Context, *FinishJudgeTaskRequest) (*FinishJudgeTaskResponse, error)
}

// UnimplementedLibraryCheckerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLibraryCheckerServiceServer struct {
}

func (*UnimplementedLibraryCheckerServiceServer) Register(context.Context, *RegisterRequest) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) UserInfo(context.Context, *UserInfoRequest) (*UserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserInfo not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) UserList(context.Context, *UserListRequest) (*UserListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserList not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) ChangeUserInfo(context.Context, *ChangeUserInfoRequest) (*ChangeUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeUserInfo not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) ProblemInfo(context.Context, *ProblemInfoRequest) (*ProblemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProblemInfo not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) ProblemList(context.Context, *ProblemListRequest) (*ProblemListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProblemList not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) ChangeProblemInfo(context.Context, *ChangeProblemInfoRequest) (*ChangeProblemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeProblemInfo not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) Submit(context.Context, *SubmitRequest) (*SubmitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Submit not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) SubmissionInfo(context.Context, *SubmissionInfoRequest) (*SubmissionInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmissionInfo not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) SubmissionList(context.Context, *SubmissionListRequest) (*SubmissionListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmissionList not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) Rejudge(context.Context, *RejudgeRequest) (*RejudgeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rejudge not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) LangList(context.Context, *LangListRequest) (*LangListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LangList not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) Ranking(context.Context, *RankingRequest) (*RankingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ranking not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) PopJudgeTask(context.Context, *PopJudgeTaskRequest) (*PopJudgeTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PopJudgeTask not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) SyncJudgeTaskStatus(context.Context, *SyncJudgeTaskStatusRequest) (*SyncJudgeTaskStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncJudgeTaskStatus not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) FinishJudgeTask(context.Context, *FinishJudgeTaskRequest) (*FinishJudgeTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinishJudgeTask not implemented")
}

func RegisterLibraryCheckerServiceServer(s *grpc.Server, srv LibraryCheckerServiceServer) {
	s.RegisterService(&_LibraryCheckerService_serviceDesc, srv)
}

func _LibraryCheckerService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_UserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).UserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/UserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).UserInfo(ctx, req.(*UserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_UserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).UserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/UserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).UserList(ctx, req.(*UserListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_ChangeUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).ChangeUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/ChangeUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).ChangeUserInfo(ctx, req.(*ChangeUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_ProblemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProblemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).ProblemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/ProblemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).ProblemInfo(ctx, req.(*ProblemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_ProblemList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProblemListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).ProblemList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/ProblemList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).ProblemList(ctx, req.(*ProblemListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_ChangeProblemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeProblemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).ChangeProblemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/ChangeProblemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).ChangeProblemInfo(ctx, req.(*ChangeProblemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_Submit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).Submit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/Submit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).Submit(ctx, req.(*SubmitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_SubmissionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmissionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).SubmissionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/SubmissionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).SubmissionInfo(ctx, req.(*SubmissionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_SubmissionList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmissionListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).SubmissionList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/SubmissionList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).SubmissionList(ctx, req.(*SubmissionListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_Rejudge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RejudgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).Rejudge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/Rejudge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).Rejudge(ctx, req.(*RejudgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_LangList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LangListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).LangList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/LangList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).LangList(ctx, req.(*LangListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_Ranking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RankingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).Ranking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/Ranking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).Ranking(ctx, req.(*RankingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_PopJudgeTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PopJudgeTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).PopJudgeTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/PopJudgeTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).PopJudgeTask(ctx, req.(*PopJudgeTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_SyncJudgeTaskStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncJudgeTaskStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).SyncJudgeTaskStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/SyncJudgeTaskStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).SyncJudgeTaskStatus(ctx, req.(*SyncJudgeTaskStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_FinishJudgeTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinishJudgeTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).FinishJudgeTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/FinishJudgeTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).FinishJudgeTask(ctx, req.(*FinishJudgeTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LibraryCheckerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "librarychecker.LibraryCheckerService",
	HandlerType: (*LibraryCheckerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _LibraryCheckerService_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _LibraryCheckerService_Login_Handler,
		},
		{
			MethodName: "UserInfo",
			Handler:    _LibraryCheckerService_UserInfo_Handler,
		},
		{
			MethodName: "UserList",
			Handler:    _LibraryCheckerService_UserList_Handler,
		},
		{
			MethodName: "ChangeUserInfo",
			Handler:    _LibraryCheckerService_ChangeUserInfo_Handler,
		},
		{
			MethodName: "ProblemInfo",
			Handler:    _LibraryCheckerService_ProblemInfo_Handler,
		},
		{
			MethodName: "ProblemList",
			Handler:    _LibraryCheckerService_ProblemList_Handler,
		},
		{
			MethodName: "ChangeProblemInfo",
			Handler:    _LibraryCheckerService_ChangeProblemInfo_Handler,
		},
		{
			MethodName: "Submit",
			Handler:    _LibraryCheckerService_Submit_Handler,
		},
		{
			MethodName: "SubmissionInfo",
			Handler:    _LibraryCheckerService_SubmissionInfo_Handler,
		},
		{
			MethodName: "SubmissionList",
			Handler:    _LibraryCheckerService_SubmissionList_Handler,
		},
		{
			MethodName: "Rejudge",
			Handler:    _LibraryCheckerService_Rejudge_Handler,
		},
		{
			MethodName: "LangList",
			Handler:    _LibraryCheckerService_LangList_Handler,
		},
		{
			MethodName: "Ranking",
			Handler:    _LibraryCheckerService_Ranking_Handler,
		},
		{
			MethodName: "PopJudgeTask",
			Handler:    _LibraryCheckerService_PopJudgeTask_Handler,
		},
		{
			MethodName: "SyncJudgeTaskStatus",
			Handler:    _LibraryCheckerService_SyncJudgeTaskStatus_Handler,
		},
		{
			MethodName: "FinishJudgeTask",
			Handler:    _LibraryCheckerService_FinishJudgeTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/library_checker.proto",
}
