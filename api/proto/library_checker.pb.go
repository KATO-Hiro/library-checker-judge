// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/library_checker.proto

package librarychecker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{1}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Problem struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Problem) Reset()         { *m = Problem{} }
func (m *Problem) String() string { return proto.CompactTextString(m) }
func (*Problem) ProtoMessage()    {}
func (*Problem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{2}
}

func (m *Problem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Problem.Unmarshal(m, b)
}
func (m *Problem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Problem.Marshal(b, m, deterministic)
}
func (m *Problem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Problem.Merge(m, src)
}
func (m *Problem) XXX_Size() int {
	return xxx_messageInfo_Problem.Size(m)
}
func (m *Problem) XXX_DiscardUnknown() {
	xxx_messageInfo_Problem.DiscardUnknown(m)
}

var xxx_messageInfo_Problem proto.InternalMessageInfo

func (m *Problem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Problem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ProblemListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemListRequest) Reset()         { *m = ProblemListRequest{} }
func (m *ProblemListRequest) String() string { return proto.CompactTextString(m) }
func (*ProblemListRequest) ProtoMessage()    {}
func (*ProblemListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{3}
}

func (m *ProblemListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemListRequest.Unmarshal(m, b)
}
func (m *ProblemListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemListRequest.Marshal(b, m, deterministic)
}
func (m *ProblemListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemListRequest.Merge(m, src)
}
func (m *ProblemListRequest) XXX_Size() int {
	return xxx_messageInfo_ProblemListRequest.Size(m)
}
func (m *ProblemListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemListRequest proto.InternalMessageInfo

type ProblemListResponse struct {
	Problems             []*Problem `protobuf:"bytes,1,rep,name=problems,proto3" json:"problems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProblemListResponse) Reset()         { *m = ProblemListResponse{} }
func (m *ProblemListResponse) String() string { return proto.CompactTextString(m) }
func (*ProblemListResponse) ProtoMessage()    {}
func (*ProblemListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{4}
}

func (m *ProblemListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemListResponse.Unmarshal(m, b)
}
func (m *ProblemListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemListResponse.Marshal(b, m, deterministic)
}
func (m *ProblemListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemListResponse.Merge(m, src)
}
func (m *ProblemListResponse) XXX_Size() int {
	return xxx_messageInfo_ProblemListResponse.Size(m)
}
func (m *ProblemListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemListResponse proto.InternalMessageInfo

func (m *ProblemListResponse) GetProblems() []*Problem {
	if m != nil {
		return m.Problems
	}
	return nil
}

type ProblemInfoRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemInfoRequest) Reset()         { *m = ProblemInfoRequest{} }
func (m *ProblemInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ProblemInfoRequest) ProtoMessage()    {}
func (*ProblemInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{5}
}

func (m *ProblemInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemInfoRequest.Unmarshal(m, b)
}
func (m *ProblemInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemInfoRequest.Marshal(b, m, deterministic)
}
func (m *ProblemInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemInfoRequest.Merge(m, src)
}
func (m *ProblemInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ProblemInfoRequest.Size(m)
}
func (m *ProblemInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemInfoRequest proto.InternalMessageInfo

func (m *ProblemInfoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ProblemInfoResponse struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Statement            string   `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
	TimeLimit            float64  `protobuf:"fixed64,3,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemInfoResponse) Reset()         { *m = ProblemInfoResponse{} }
func (m *ProblemInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ProblemInfoResponse) ProtoMessage()    {}
func (*ProblemInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{6}
}

func (m *ProblemInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemInfoResponse.Unmarshal(m, b)
}
func (m *ProblemInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemInfoResponse.Marshal(b, m, deterministic)
}
func (m *ProblemInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemInfoResponse.Merge(m, src)
}
func (m *ProblemInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ProblemInfoResponse.Size(m)
}
func (m *ProblemInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemInfoResponse proto.InternalMessageInfo

func (m *ProblemInfoResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ProblemInfoResponse) GetStatement() string {
	if m != nil {
		return m.Statement
	}
	return ""
}

func (m *ProblemInfoResponse) GetTimeLimit() float64 {
	if m != nil {
		return m.TimeLimit
	}
	return 0
}

type SubmitRequest struct {
	Problem              string   `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Lang                 string   `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitRequest) Reset()         { *m = SubmitRequest{} }
func (m *SubmitRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitRequest) ProtoMessage()    {}
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{7}
}

func (m *SubmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitRequest.Unmarshal(m, b)
}
func (m *SubmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitRequest.Marshal(b, m, deterministic)
}
func (m *SubmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitRequest.Merge(m, src)
}
func (m *SubmitRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitRequest.Size(m)
}
func (m *SubmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitRequest proto.InternalMessageInfo

func (m *SubmitRequest) GetProblem() string {
	if m != nil {
		return m.Problem
	}
	return ""
}

func (m *SubmitRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *SubmitRequest) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

type SubmitResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitResponse) Reset()         { *m = SubmitResponse{} }
func (m *SubmitResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitResponse) ProtoMessage()    {}
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{8}
}

func (m *SubmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitResponse.Unmarshal(m, b)
}
func (m *SubmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitResponse.Marshal(b, m, deterministic)
}
func (m *SubmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitResponse.Merge(m, src)
}
func (m *SubmitResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitResponse.Size(m)
}
func (m *SubmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitResponse proto.InternalMessageInfo

func (m *SubmitResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SubmissionOverview struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProblemName          string   `protobuf:"bytes,2,opt,name=problem_name,json=problemName,proto3" json:"problem_name,omitempty"`
	ProblemTitle         string   `protobuf:"bytes,3,opt,name=problem_title,json=problemTitle,proto3" json:"problem_title,omitempty"`
	UserName             string   `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Lang                 string   `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`
	IsLatest             bool     `protobuf:"varint,6,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Time                 float64  `protobuf:"fixed64,8,opt,name=time,proto3" json:"time,omitempty"`
	Memory               int64    `protobuf:"varint,9,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmissionOverview) Reset()         { *m = SubmissionOverview{} }
func (m *SubmissionOverview) String() string { return proto.CompactTextString(m) }
func (*SubmissionOverview) ProtoMessage()    {}
func (*SubmissionOverview) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{9}
}

func (m *SubmissionOverview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmissionOverview.Unmarshal(m, b)
}
func (m *SubmissionOverview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmissionOverview.Marshal(b, m, deterministic)
}
func (m *SubmissionOverview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmissionOverview.Merge(m, src)
}
func (m *SubmissionOverview) XXX_Size() int {
	return xxx_messageInfo_SubmissionOverview.Size(m)
}
func (m *SubmissionOverview) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmissionOverview.DiscardUnknown(m)
}

var xxx_messageInfo_SubmissionOverview proto.InternalMessageInfo

func (m *SubmissionOverview) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SubmissionOverview) GetProblemName() string {
	if m != nil {
		return m.ProblemName
	}
	return ""
}

func (m *SubmissionOverview) GetProblemTitle() string {
	if m != nil {
		return m.ProblemTitle
	}
	return ""
}

func (m *SubmissionOverview) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SubmissionOverview) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *SubmissionOverview) GetIsLatest() bool {
	if m != nil {
		return m.IsLatest
	}
	return false
}

func (m *SubmissionOverview) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *SubmissionOverview) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SubmissionOverview) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

type SubmissionCaseResult struct {
	Case                 string   `protobuf:"bytes,1,opt,name=case,proto3" json:"case,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Time                 float64  `protobuf:"fixed64,3,opt,name=time,proto3" json:"time,omitempty"`
	Memory               int64    `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmissionCaseResult) Reset()         { *m = SubmissionCaseResult{} }
func (m *SubmissionCaseResult) String() string { return proto.CompactTextString(m) }
func (*SubmissionCaseResult) ProtoMessage()    {}
func (*SubmissionCaseResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{10}
}

func (m *SubmissionCaseResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmissionCaseResult.Unmarshal(m, b)
}
func (m *SubmissionCaseResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmissionCaseResult.Marshal(b, m, deterministic)
}
func (m *SubmissionCaseResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmissionCaseResult.Merge(m, src)
}
func (m *SubmissionCaseResult) XXX_Size() int {
	return xxx_messageInfo_SubmissionCaseResult.Size(m)
}
func (m *SubmissionCaseResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmissionCaseResult.DiscardUnknown(m)
}

var xxx_messageInfo_SubmissionCaseResult proto.InternalMessageInfo

func (m *SubmissionCaseResult) GetCase() string {
	if m != nil {
		return m.Case
	}
	return ""
}

func (m *SubmissionCaseResult) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *SubmissionCaseResult) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SubmissionCaseResult) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

type SubmissionInfoRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmissionInfoRequest) Reset()         { *m = SubmissionInfoRequest{} }
func (m *SubmissionInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SubmissionInfoRequest) ProtoMessage()    {}
func (*SubmissionInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{11}
}

func (m *SubmissionInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmissionInfoRequest.Unmarshal(m, b)
}
func (m *SubmissionInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmissionInfoRequest.Marshal(b, m, deterministic)
}
func (m *SubmissionInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmissionInfoRequest.Merge(m, src)
}
func (m *SubmissionInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SubmissionInfoRequest.Size(m)
}
func (m *SubmissionInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmissionInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmissionInfoRequest proto.InternalMessageInfo

func (m *SubmissionInfoRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SubmissionInfoResponse struct {
	Overview             *SubmissionOverview     `protobuf:"bytes,1,opt,name=overview,proto3" json:"overview,omitempty"`
	CaseResults          []*SubmissionCaseResult `protobuf:"bytes,2,rep,name=case_results,json=caseResults,proto3" json:"case_results,omitempty"`
	Source               string                  `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SubmissionInfoResponse) Reset()         { *m = SubmissionInfoResponse{} }
func (m *SubmissionInfoResponse) String() string { return proto.CompactTextString(m) }
func (*SubmissionInfoResponse) ProtoMessage()    {}
func (*SubmissionInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{12}
}

func (m *SubmissionInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmissionInfoResponse.Unmarshal(m, b)
}
func (m *SubmissionInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmissionInfoResponse.Marshal(b, m, deterministic)
}
func (m *SubmissionInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmissionInfoResponse.Merge(m, src)
}
func (m *SubmissionInfoResponse) XXX_Size() int {
	return xxx_messageInfo_SubmissionInfoResponse.Size(m)
}
func (m *SubmissionInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmissionInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmissionInfoResponse proto.InternalMessageInfo

func (m *SubmissionInfoResponse) GetOverview() *SubmissionOverview {
	if m != nil {
		return m.Overview
	}
	return nil
}

func (m *SubmissionInfoResponse) GetCaseResults() []*SubmissionCaseResult {
	if m != nil {
		return m.CaseResults
	}
	return nil
}

func (m *SubmissionInfoResponse) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type SubmissionListRequest struct {
	Skip                 uint32   `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Problem              string   `protobuf:"bytes,3,opt,name=problem,proto3" json:"problem,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	User                 string   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmissionListRequest) Reset()         { *m = SubmissionListRequest{} }
func (m *SubmissionListRequest) String() string { return proto.CompactTextString(m) }
func (*SubmissionListRequest) ProtoMessage()    {}
func (*SubmissionListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{13}
}

func (m *SubmissionListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmissionListRequest.Unmarshal(m, b)
}
func (m *SubmissionListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmissionListRequest.Marshal(b, m, deterministic)
}
func (m *SubmissionListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmissionListRequest.Merge(m, src)
}
func (m *SubmissionListRequest) XXX_Size() int {
	return xxx_messageInfo_SubmissionListRequest.Size(m)
}
func (m *SubmissionListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmissionListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmissionListRequest proto.InternalMessageInfo

func (m *SubmissionListRequest) GetSkip() uint32 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *SubmissionListRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SubmissionListRequest) GetProblem() string {
	if m != nil {
		return m.Problem
	}
	return ""
}

func (m *SubmissionListRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *SubmissionListRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type SubmissionListResponse struct {
	Submissions          []*SubmissionOverview `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	Count                int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SubmissionListResponse) Reset()         { *m = SubmissionListResponse{} }
func (m *SubmissionListResponse) String() string { return proto.CompactTextString(m) }
func (*SubmissionListResponse) ProtoMessage()    {}
func (*SubmissionListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{14}
}

func (m *SubmissionListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmissionListResponse.Unmarshal(m, b)
}
func (m *SubmissionListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmissionListResponse.Marshal(b, m, deterministic)
}
func (m *SubmissionListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmissionListResponse.Merge(m, src)
}
func (m *SubmissionListResponse) XXX_Size() int {
	return xxx_messageInfo_SubmissionListResponse.Size(m)
}
func (m *SubmissionListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmissionListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmissionListResponse proto.InternalMessageInfo

func (m *SubmissionListResponse) GetSubmissions() []*SubmissionOverview {
	if m != nil {
		return m.Submissions
	}
	return nil
}

func (m *SubmissionListResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Lang struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lang) Reset()         { *m = Lang{} }
func (m *Lang) String() string { return proto.CompactTextString(m) }
func (*Lang) ProtoMessage()    {}
func (*Lang) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{15}
}

func (m *Lang) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lang.Unmarshal(m, b)
}
func (m *Lang) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lang.Marshal(b, m, deterministic)
}
func (m *Lang) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lang.Merge(m, src)
}
func (m *Lang) XXX_Size() int {
	return xxx_messageInfo_Lang.Size(m)
}
func (m *Lang) XXX_DiscardUnknown() {
	xxx_messageInfo_Lang.DiscardUnknown(m)
}

var xxx_messageInfo_Lang proto.InternalMessageInfo

func (m *Lang) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Lang) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Lang) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type LangListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LangListRequest) Reset()         { *m = LangListRequest{} }
func (m *LangListRequest) String() string { return proto.CompactTextString(m) }
func (*LangListRequest) ProtoMessage()    {}
func (*LangListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{16}
}

func (m *LangListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LangListRequest.Unmarshal(m, b)
}
func (m *LangListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LangListRequest.Marshal(b, m, deterministic)
}
func (m *LangListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LangListRequest.Merge(m, src)
}
func (m *LangListRequest) XXX_Size() int {
	return xxx_messageInfo_LangListRequest.Size(m)
}
func (m *LangListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LangListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LangListRequest proto.InternalMessageInfo

type LangListResponse struct {
	Langs                []*Lang  `protobuf:"bytes,1,rep,name=langs,proto3" json:"langs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LangListResponse) Reset()         { *m = LangListResponse{} }
func (m *LangListResponse) String() string { return proto.CompactTextString(m) }
func (*LangListResponse) ProtoMessage()    {}
func (*LangListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9accbd90656ef5bc, []int{17}
}

func (m *LangListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LangListResponse.Unmarshal(m, b)
}
func (m *LangListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LangListResponse.Marshal(b, m, deterministic)
}
func (m *LangListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LangListResponse.Merge(m, src)
}
func (m *LangListResponse) XXX_Size() int {
	return xxx_messageInfo_LangListResponse.Size(m)
}
func (m *LangListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LangListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LangListResponse proto.InternalMessageInfo

func (m *LangListResponse) GetLangs() []*Lang {
	if m != nil {
		return m.Langs
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "librarychecker.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "librarychecker.LoginResponse")
	proto.RegisterType((*Problem)(nil), "librarychecker.Problem")
	proto.RegisterType((*ProblemListRequest)(nil), "librarychecker.ProblemListRequest")
	proto.RegisterType((*ProblemListResponse)(nil), "librarychecker.ProblemListResponse")
	proto.RegisterType((*ProblemInfoRequest)(nil), "librarychecker.ProblemInfoRequest")
	proto.RegisterType((*ProblemInfoResponse)(nil), "librarychecker.ProblemInfoResponse")
	proto.RegisterType((*SubmitRequest)(nil), "librarychecker.SubmitRequest")
	proto.RegisterType((*SubmitResponse)(nil), "librarychecker.SubmitResponse")
	proto.RegisterType((*SubmissionOverview)(nil), "librarychecker.SubmissionOverview")
	proto.RegisterType((*SubmissionCaseResult)(nil), "librarychecker.SubmissionCaseResult")
	proto.RegisterType((*SubmissionInfoRequest)(nil), "librarychecker.SubmissionInfoRequest")
	proto.RegisterType((*SubmissionInfoResponse)(nil), "librarychecker.SubmissionInfoResponse")
	proto.RegisterType((*SubmissionListRequest)(nil), "librarychecker.SubmissionListRequest")
	proto.RegisterType((*SubmissionListResponse)(nil), "librarychecker.SubmissionListResponse")
	proto.RegisterType((*Lang)(nil), "librarychecker.Lang")
	proto.RegisterType((*LangListRequest)(nil), "librarychecker.LangListRequest")
	proto.RegisterType((*LangListResponse)(nil), "librarychecker.LangListResponse")
}

func init() { proto.RegisterFile("proto/library_checker.proto", fileDescriptor_9accbd90656ef5bc) }

var fileDescriptor_9accbd90656ef5bc = []byte{
	// 786 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x56, 0x5b, 0x4f, 0xdb, 0x4a,
	0x10, 0x3e, 0xce, 0x8d, 0x64, 0x42, 0x38, 0xe7, 0xec, 0x09, 0x1c, 0x8b, 0x4b, 0x4b, 0x97, 0x42,
	0x51, 0x1f, 0xa8, 0x04, 0xef, 0xbc, 0x80, 0x5a, 0x51, 0x45, 0xa5, 0x32, 0xad, 0xd4, 0xb7, 0xc8,
	0x09, 0x5b, 0xb0, 0xf0, 0x25, 0xf5, 0xda, 0x20, 0x7e, 0x41, 0x7f, 0x53, 0x7f, 0x58, 0x5f, 0xab,
	0xee, 0xec, 0xc5, 0xde, 0x04, 0x1b, 0xfa, 0xb6, 0x33, 0x9e, 0xf9, 0x66, 0xbe, 0x6f, 0x67, 0x27,
	0x81, 0x8d, 0x59, 0x9a, 0x64, 0xc9, 0x9b, 0x30, 0x98, 0xa4, 0x7e, 0x7a, 0x3f, 0x9e, 0x5e, 0xb3,
	0xe9, 0x0d, 0x4b, 0x0f, 0xa4, 0x97, 0xac, 0x68, 0xb7, 0xf6, 0xd2, 0x63, 0x58, 0x1e, 0x25, 0x57,
	0x41, 0xec, 0xb1, 0x6f, 0x39, 0xe3, 0x19, 0x21, 0xd0, 0x8a, 0xfd, 0x88, 0xb9, 0xce, 0xb6, 0xb3,
	0xdf, 0xf3, 0xe4, 0x99, 0xac, 0x43, 0x77, 0xe6, 0x73, 0x7e, 0x97, 0xa4, 0x97, 0x6e, 0x43, 0xfa,
	0x0b, 0x9b, 0xee, 0xc2, 0x40, 0xe7, 0xf3, 0x59, 0x12, 0x73, 0x46, 0x86, 0xd0, 0xce, 0x92, 0x1b,
	0x16, 0x6b, 0x04, 0x65, 0xd0, 0x23, 0x58, 0xfa, 0x98, 0x26, 0x93, 0x90, 0x45, 0x95, 0x15, 0x30,
	0x29, 0xc8, 0x42, 0xa6, 0xe1, 0x95, 0x41, 0x87, 0x40, 0x74, 0xd2, 0x28, 0xe0, 0x99, 0xee, 0x90,
	0xbe, 0x87, 0xff, 0xe6, 0xbc, 0xba, 0xee, 0x91, 0x68, 0x52, 0xb9, 0xb9, 0x80, 0x6e, 0xee, 0xf7,
	0x0f, 0xff, 0x3f, 0x98, 0xe7, 0x7a, 0xa0, 0xd3, 0xbc, 0x22, 0x90, 0xee, 0x17, 0x15, 0xce, 0xe2,
	0xaf, 0xc9, 0x23, 0x1a, 0xd0, 0xeb, 0xa2, 0xaa, 0x8a, 0xb4, 0xd8, 0xca, 0xc6, 0x1d, 0xab, 0x71,
	0xb2, 0x09, 0x3d, 0x9e, 0xf9, 0x19, 0x8b, 0x58, 0x9c, 0x69, 0x4a, 0xa5, 0x83, 0x6c, 0x01, 0x64,
	0x41, 0xc4, 0xc6, 0x61, 0x10, 0x05, 0x99, 0xdb, 0x14, 0x9f, 0x1d, 0xaf, 0x87, 0x9e, 0x11, 0x3a,
	0xe8, 0x67, 0x18, 0x5c, 0xe4, 0x13, 0x71, 0x32, 0xed, 0xb8, 0xb0, 0xa4, 0x1b, 0xd6, 0x55, 0x8c,
	0x49, 0xd6, 0xa0, 0xc3, 0x93, 0x3c, 0x9d, 0x1a, 0xdd, 0xb4, 0x85, 0x04, 0x42, 0x3f, 0xbe, 0x92,
	0xd8, 0x82, 0x00, 0x9e, 0xe9, 0x36, 0xac, 0x18, 0x58, 0xdd, 0xfb, 0x0a, 0x34, 0x82, 0x4b, 0x09,
	0xd9, 0xf6, 0xc4, 0x89, 0xfe, 0x72, 0x80, 0xc8, 0x10, 0xce, 0x83, 0x24, 0x3e, 0xbf, 0x65, 0xe9,
	0x6d, 0xc0, 0xee, 0x16, 0xc3, 0xc8, 0x0b, 0x58, 0xd6, 0xf5, 0xc7, 0x52, 0x25, 0x55, 0xba, 0xaf,
	0x7d, 0x1f, 0xf0, 0x3a, 0x77, 0x60, 0x60, 0x42, 0x94, 0x3a, 0xaa, 0x11, 0x93, 0xf7, 0x49, 0x8a,
	0xb4, 0x01, 0xbd, 0x9c, 0xb3, 0x54, 0x81, 0xb4, 0xd4, 0x58, 0xa1, 0x43, 0x22, 0x18, 0x06, 0xed,
	0x92, 0x01, 0x26, 0x04, 0x7c, 0x1c, 0x0a, 0x19, 0x79, 0xe6, 0x76, 0xc4, 0x87, 0xae, 0xd7, 0x0d,
	0xf8, 0x48, 0xda, 0x52, 0x0a, 0xa1, 0x70, 0xce, 0xdd, 0x25, 0x2d, 0x85, 0xb4, 0x10, 0x08, 0xa5,
	0x75, 0xbb, 0x52, 0x66, 0x79, 0xc6, 0xd8, 0x88, 0x45, 0x49, 0x7a, 0xef, 0xf6, 0x84, 0xb7, 0xe9,
	0x69, 0x8b, 0xc6, 0x30, 0x2c, 0xf9, 0x9f, 0xf8, 0x9c, 0x09, 0xa9, 0xf2, 0x50, 0xce, 0xc3, 0x54,
	0x58, 0x66, 0x1e, 0xf0, 0x6c, 0xd5, 0x6b, 0x54, 0xd6, 0x6b, 0x56, 0xd6, 0x6b, 0xcd, 0xd5, 0x7b,
	0x05, 0xab, 0x65, 0x3d, 0x7b, 0x00, 0x17, 0x6f, 0xe6, 0x87, 0x03, 0x6b, 0x8b, 0x91, 0xfa, 0x12,
	0x8f, 0xa1, 0x9b, 0xe8, 0x9b, 0x92, 0x09, 0xfd, 0x43, 0xba, 0x38, 0xf6, 0x0f, 0xef, 0xd4, 0x2b,
	0x72, 0xc8, 0x3b, 0x58, 0x46, 0x3e, 0xe3, 0x54, 0x52, 0x45, 0x36, 0xf8, 0x74, 0x5e, 0xd6, 0x63,
	0x94, 0xba, 0x78, 0xfd, 0x69, 0x71, 0xe6, 0xd6, 0x2c, 0x36, 0xed, 0x59, 0xa4, 0xdf, 0x1d, 0x9b,
	0xa5, 0xf5, 0x90, 0x51, 0x2a, 0x7e, 0x13, 0xcc, 0x64, 0xdb, 0x03, 0x4f, 0x9e, 0xf1, 0x3d, 0xa9,
	0x67, 0xd1, 0x90, 0x4e, 0x65, 0xd8, 0x2f, 0xa0, 0xf9, 0xf0, 0x05, 0xa8, 0x6b, 0x68, 0x2d, 0x5e,
	0x03, 0xce, 0x92, 0x99, 0x1f, 0x3c, 0xd3, 0xcc, 0x16, 0x71, 0x6e, 0x77, 0x9c, 0x42, 0x9f, 0x17,
	0x5f, 0xcc, 0xfa, 0xf8, 0x13, 0x1d, 0xed, 0x34, 0xec, 0x7d, 0x9a, 0xe4, 0xfa, 0xc5, 0xb7, 0x3d,
	0x65, 0xd0, 0x53, 0x68, 0x8d, 0x70, 0x7a, 0xcb, 0x3b, 0xed, 0xc9, 0x67, 0x64, 0x96, 0x4c, 0xc3,
	0x5a, 0x83, 0x82, 0xa7, 0x40, 0x46, 0x34, 0xc3, 0x53, 0x9b, 0xf4, 0x5f, 0xf8, 0x1b, 0x51, 0xec,
	0x3d, 0x78, 0x0c, 0xff, 0x94, 0x2e, 0x4d, 0xe4, 0xb5, 0x90, 0x4f, 0xf8, 0x0c, 0x85, 0xe1, 0x22,
	0x05, 0x4c, 0xf0, 0x54, 0xc8, 0xe1, 0xcf, 0x16, 0xac, 0x8e, 0xd4, 0xe7, 0x13, 0xf5, 0xf9, 0x02,
	0x59, 0x89, 0xf5, 0xf1, 0x16, 0xda, 0x72, 0xa7, 0x93, 0xcd, 0x07, 0xf9, 0xd6, 0x4f, 0xc5, 0xfa,
	0x56, 0xcd, 0x57, 0xd5, 0x0b, 0xfd, 0x8b, 0x7c, 0x81, 0xbe, 0xb5, 0x33, 0x09, 0xad, 0xd9, 0xc7,
	0xd6, 0xe4, 0xaf, 0xef, 0x3c, 0x1a, 0x53, 0x81, 0x8c, 0xf4, 0x6b, 0x91, 0x2d, 0xb9, 0x6a, 0x91,
	0x6d, 0xfd, 0x04, 0xf2, 0x19, 0x74, 0xd4, 0x9a, 0x24, 0x5b, 0x95, 0xf7, 0x5f, 0xe0, 0x3d, 0xab,
	0xfb, 0x5c, 0x40, 0xf9, 0x7a, 0xe3, 0x16, 0x8f, 0x96, 0xec, 0xd6, 0x8f, 0x94, 0x2d, 0xc2, 0xde,
	0x53, 0x61, 0xd5, 0x25, 0xa4, 0x14, 0x8f, 0x94, 0xb0, 0xd5, 0xd8, 0x7b, 0x2a, 0xac, 0x28, 0x71,
	0x0e, 0x5d, 0x33, 0x66, 0xe4, 0x79, 0xd5, 0x3c, 0xd9, 0xb0, 0xdb, 0xf5, 0x01, 0x06, 0x70, 0xd2,
	0x91, 0x7f, 0x44, 0x8e, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x7c, 0xf4, 0x3d, 0xa7, 0x08,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LibraryCheckerServiceClient is the client API for LibraryCheckerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LibraryCheckerServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	ProblemInfo(ctx context.Context, in *ProblemInfoRequest, opts ...grpc.CallOption) (*ProblemInfoResponse, error)
	ProblemList(ctx context.Context, in *ProblemListRequest, opts ...grpc.CallOption) (*ProblemListResponse, error)
	Submit(ctx context.Context, in *SubmitRequest, opts ...grpc.CallOption) (*SubmitResponse, error)
	SubmissionInfo(ctx context.Context, in *SubmissionInfoRequest, opts ...grpc.CallOption) (*SubmissionInfoResponse, error)
	SubmissionList(ctx context.Context, in *SubmissionListRequest, opts ...grpc.CallOption) (*SubmissionListResponse, error)
	LangList(ctx context.Context, in *LangListRequest, opts ...grpc.CallOption) (*LangListResponse, error)
}

type libraryCheckerServiceClient struct {
	cc *grpc.ClientConn
}

func NewLibraryCheckerServiceClient(cc *grpc.ClientConn) LibraryCheckerServiceClient {
	return &libraryCheckerServiceClient{cc}
}

func (c *libraryCheckerServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) ProblemInfo(ctx context.Context, in *ProblemInfoRequest, opts ...grpc.CallOption) (*ProblemInfoResponse, error) {
	out := new(ProblemInfoResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/ProblemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) ProblemList(ctx context.Context, in *ProblemListRequest, opts ...grpc.CallOption) (*ProblemListResponse, error) {
	out := new(ProblemListResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/ProblemList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) Submit(ctx context.Context, in *SubmitRequest, opts ...grpc.CallOption) (*SubmitResponse, error) {
	out := new(SubmitResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/Submit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) SubmissionInfo(ctx context.Context, in *SubmissionInfoRequest, opts ...grpc.CallOption) (*SubmissionInfoResponse, error) {
	out := new(SubmissionInfoResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/SubmissionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) SubmissionList(ctx context.Context, in *SubmissionListRequest, opts ...grpc.CallOption) (*SubmissionListResponse, error) {
	out := new(SubmissionListResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/SubmissionList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryCheckerServiceClient) LangList(ctx context.Context, in *LangListRequest, opts ...grpc.CallOption) (*LangListResponse, error) {
	out := new(LangListResponse)
	err := c.cc.Invoke(ctx, "/librarychecker.LibraryCheckerService/LangList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LibraryCheckerServiceServer is the server API for LibraryCheckerService service.
type LibraryCheckerServiceServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	ProblemInfo(context.Context, *ProblemInfoRequest) (*ProblemInfoResponse, error)
	ProblemList(context.Context, *ProblemListRequest) (*ProblemListResponse, error)
	Submit(context.Context, *SubmitRequest) (*SubmitResponse, error)
	SubmissionInfo(context.Context, *SubmissionInfoRequest) (*SubmissionInfoResponse, error)
	SubmissionList(context.Context, *SubmissionListRequest) (*SubmissionListResponse, error)
	LangList(context.Context, *LangListRequest) (*LangListResponse, error)
}

// UnimplementedLibraryCheckerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLibraryCheckerServiceServer struct {
}

func (*UnimplementedLibraryCheckerServiceServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) ProblemInfo(ctx context.Context, req *ProblemInfoRequest) (*ProblemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProblemInfo not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) ProblemList(ctx context.Context, req *ProblemListRequest) (*ProblemListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProblemList not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) Submit(ctx context.Context, req *SubmitRequest) (*SubmitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Submit not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) SubmissionInfo(ctx context.Context, req *SubmissionInfoRequest) (*SubmissionInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmissionInfo not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) SubmissionList(ctx context.Context, req *SubmissionListRequest) (*SubmissionListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmissionList not implemented")
}
func (*UnimplementedLibraryCheckerServiceServer) LangList(ctx context.Context, req *LangListRequest) (*LangListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LangList not implemented")
}

func RegisterLibraryCheckerServiceServer(s *grpc.Server, srv LibraryCheckerServiceServer) {
	s.RegisterService(&_LibraryCheckerService_serviceDesc, srv)
}

func _LibraryCheckerService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_ProblemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProblemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).ProblemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/ProblemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).ProblemInfo(ctx, req.(*ProblemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_ProblemList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProblemListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).ProblemList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/ProblemList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).ProblemList(ctx, req.(*ProblemListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_Submit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).Submit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/Submit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).Submit(ctx, req.(*SubmitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_SubmissionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmissionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).SubmissionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/SubmissionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).SubmissionInfo(ctx, req.(*SubmissionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_SubmissionList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmissionListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).SubmissionList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/SubmissionList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).SubmissionList(ctx, req.(*SubmissionListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryCheckerService_LangList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LangListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryCheckerServiceServer).LangList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/librarychecker.LibraryCheckerService/LangList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryCheckerServiceServer).LangList(ctx, req.(*LangListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LibraryCheckerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "librarychecker.LibraryCheckerService",
	HandlerType: (*LibraryCheckerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _LibraryCheckerService_Login_Handler,
		},
		{
			MethodName: "ProblemInfo",
			Handler:    _LibraryCheckerService_ProblemInfo_Handler,
		},
		{
			MethodName: "ProblemList",
			Handler:    _LibraryCheckerService_ProblemList_Handler,
		},
		{
			MethodName: "Submit",
			Handler:    _LibraryCheckerService_Submit_Handler,
		},
		{
			MethodName: "SubmissionInfo",
			Handler:    _LibraryCheckerService_SubmissionInfo_Handler,
		},
		{
			MethodName: "SubmissionList",
			Handler:    _LibraryCheckerService_SubmissionList_Handler,
		},
		{
			MethodName: "LangList",
			Handler:    _LibraryCheckerService_LangList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/library_checker.proto",
}
