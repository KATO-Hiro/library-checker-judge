syntax = "proto3";

package librarychecker;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/yosupo06/library-checker-judge/api/proto";

service LibraryCheckerService {
    rpc Register (RegisterRequest) returns (RegisterResponse) {}
    rpc Login (LoginRequest) returns (LoginResponse) {}
    rpc UserInfo (UserInfoRequest) returns (UserInfoResponse) {}
    rpc UserList (UserListRequest) returns (UserListResponse) {}
    rpc ChangeUserInfo (ChangeUserInfoRequest) returns (ChangeUserInfoResponse) {}
    rpc ProblemInfo (ProblemInfoRequest) returns (ProblemInfoResponse) {}
    rpc ProblemList (ProblemListRequest) returns (ProblemListResponse) {}
    rpc Submit (SubmitRequest) returns (SubmitResponse) {}
    rpc SubmissionInfo (SubmissionInfoRequest) returns (SubmissionInfoResponse) {}
    rpc SubmissionList (SubmissionListRequest) returns (SubmissionListResponse) {}
    rpc Rejudge (RejudgeRequest) returns (RejudgeResponse) {}
    rpc LangList (LangListRequest) returns (LangListResponse) {}
    rpc Ranking (RankingRequest) returns (RankingResponse) {} // used by another product
    rpc ProblemCategories (ProblemCategoriesRequest) returns (ProblemCategoriesResponse) {}
}

// --- Register, Login ---

message RegisterRequest {
    string name = 1; // "newuser"
    string password = 2; // "password"    
}
message RegisterResponse {
    string token = 1; // JWT Token
}

message LoginRequest {
    string name = 1; // "admin"
    string password = 2; // "password"    
}
message LoginResponse {
    string token = 1; // JWT Token
}

message User {
    string name = 1;
    bool is_admin = 2;
    string library_url = 4;
    bool is_developer = 5;
}

enum SolvedStatus {
    UNKNOWN = 0;
    LATEST_AC = 1;
    AC = 2;
}

message UserInfoRequest {
    string name = 1; // if empty, return self information
}
message UserInfoResponse {
    bool is_admin = 1 [deprecated=true];
    User user = 2;
    map<string, SolvedStatus> solved_map = 3;
}

message UserListRequest {
}
message UserListResponse {
    repeated User users = 2;
}

message ChangeUserInfoRequest {
    User user = 1;
}
message ChangeUserInfoResponse {
}

// --- Problem ---

message Problem {
    string name = 1; // "aplusb"
    string title = 2; // "A + B"
}

message ProblemListRequest {    
}
message ProblemListResponse {
    repeated Problem problems = 1;
}

message ProblemInfoRequest {
    string name = 1; // "aplusb"
}
message ProblemInfoResponse {
    string title = 1; // "A + B"
    string source_url = 5;
    double time_limit = 3; // 2.0 = 2 seconds
    string version = 6; // problem version
    string testcases_version = 7; // testcases version
}

// --- Category ---
message ProblemCategory {
    string title = 1; // "Data Structure"
    repeated string problems = 2; // "[associative_array, unionfind, ...]"
}

message ProblemCategoriesRequest {
}
message ProblemCategoriesResponse {
    repeated ProblemCategory categories = 1;
}

// --- Submission ---

message SubmitRequest {
    string problem = 1; // "aplusb"
    string source = 2; // "int main() ..."
    string lang = 3; // "cpp"
}
message SubmitResponse {
    int32 id = 1; // submission id
}

message SubmissionOverview {
    int32 id = 1; // submission id
    string problem_name = 2; // "aplusb"
    string problem_title = 3; // "A + B"
    string user_name = 4; // "admin"
    string lang = 5; // "cpp"
    bool is_latest = 6;
    string status = 7; // "AC"
    bool hacked = 10;
    double time = 8; // 2.0 = 2 seconds
    int64 memory = 9; // x bytes
    google.protobuf.Timestamp submission_time = 11;
}

message SubmissionCaseResult {
    string case = 1; // "example_00.in"
    string status = 2; // "AC"
    double time = 3; // 2.0( = 2 seconds)
    int64 memory = 4; // x bytes
    bytes stderr = 5; // stderr of user solution
    bytes checker_out = 6; // stderr of checker
}

message SubmissionInfoRequest {
    int32 id = 1; // submission id
}
message SubmissionInfoResponse {
    SubmissionOverview overview = 1;
    repeated SubmissionCaseResult case_results = 2;
    string source = 3; // "source"
    bytes compile_error = 5;
    bool can_rejudge = 4;
}

message SubmissionListRequest {
    uint32 skip = 1; // fetch [skip, skip + limit)-th submissions
    uint32 limit = 2; // # of submissions (max 1000)
    string problem = 3; // "aplusb"(filter)
    string status = 4; // "AC"(filter)
    bool hacked = 7; // (filter)
    string user = 5; // "admin"(filter)
    string lang = 8; // "cpp"(filter)
    string order = 6; // sort order (default: "-id", "time")
}
message SubmissionListResponse {
    repeated SubmissionOverview submissions = 1;
    int32 count = 2; // # of submissions(skip/limit don't effect this)
}

message RejudgeRequest {
    int32 id = 1; // submission id
}
message RejudgeResponse {
}

// --- Lang ---

message Lang {
    string id = 1; // "cpp"
    string name = 2; // "C++(default, C++17)"
    string version = 3; // "ubuntu18.04 apt"
}

message LangListRequest {
}
message LangListResponse {
    repeated Lang langs = 1;
}

// --- Ranking ---

message UserStatistics {
    string name = 1; // "admin"
    int32 count = 2; // 12 (AC)
}
message RankingRequest {    
}
message RankingResponse {
    repeated UserStatistics statistics = 1;
}
